/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import JavaSql.JavaMySql;
import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;
import static Ventanas.Principal_Sistema.content;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

/**
 *
 * @author Antonio
 */
public class Admin extends javax.swing.JPanel {

    JavaMySql conn;
    Connection reg;

    /**
     * Creates new form Principal
     */
    public Admin() {
        initComponents();
        conn = new JavaMySql();
        reg = conn.conexion();
        mostrarU();

    }

    public void mostrarU() {

        try {
            Statement stm = reg.createStatement();
            ResultSet re = stm.executeQuery("select * from admi where estado = 1;");
            int c = 0;
            while (re.next()) {
                c++;
            }
            String list[][] = new String[c][8];

            ResultSet res = stm.executeQuery("select * from admi where estado = 1;");

            while (res.next()) {
                c--;
                list[c][0] = res.getString("idadmi");
                list[c][1] = res.getString("UAdmi");
                list[c][2] = "*************";
                list[c][3] = res.getString("cargo");
                list[c][4] = res.getNString("nombre");
                list[c][5] = res.getString("Paterno");
                list[c][6] = res.getString("Materno");
            }
            //PONIENDO TITULOS A LA TABLA ADEMAS DE LOS DATOS                 
            listUsu.setModel(new javax.swing.table.DefaultTableModel(
                    list,
                    new String[]{
                        "ID", "USUARIO", "PASSWORD", "CARGO", "NOMBRE", "PATERNO", "MATERNO"
                    }));

            //DIMENSIONANDO LA TABLA DE USUARIOS
            listUsu.getColumnModel().getColumn(0).setPreferredWidth(130);
            listUsu.getColumnModel().getColumn(1).setPreferredWidth(90);
            listUsu.getColumnModel().getColumn(2).setPreferredWidth(70);
            listUsu.getColumnModel().getColumn(3).setPreferredWidth(70);
            listUsu.getColumnModel().getColumn(4).setPreferredWidth(50);
            listUsu.getColumnModel().getColumn(5).setPreferredWidth(70);
            listUsu.getColumnModel().getColumn(6).setPreferredWidth(50);
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        body = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        search = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        delete = new javax.swing.JPanel();
        edit = new javax.swing.JPanel();
        btnEditarUsuarios = new javax.swing.JLabel();
        nuevo = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JLabel();
        buscar = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        listUsu = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        actualizar = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(750, 430));
        setPreferredSize(new java.awt.Dimension(750, 430));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        body.setBackground(new java.awt.Color(255, 255, 255));
        body.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(body, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        Title.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Title.setText("USUARIOS");
        add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 170, -1));

        jSeparator2.setForeground(new java.awt.Color(0, 153, 255));
        jSeparator2.setPreferredSize(new java.awt.Dimension(250, 10));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 590, 10));

        search.setBackground(new java.awt.Color(51, 73, 84));
        search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchMousePressed(evt);
            }
        });
        search.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("BUSCAR");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel4MousePressed(evt);
            }
        });
        search.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 30));

        add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 50, 80, 30));

        delete.setBackground(new java.awt.Color(51, 73, 84));
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                deleteMousePressed(evt);
            }
        });
        delete.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 390, 210, -1));

        edit.setBackground(new java.awt.Color(51, 73, 84));
        edit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                editMousePressed(evt);
            }
        });
        edit.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnEditarUsuarios.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnEditarUsuarios.setForeground(new java.awt.Color(255, 255, 255));
        btnEditarUsuarios.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEditarUsuarios.setText("EDITAR USUARIO");
        btnEditarUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnEditarUsuariosMousePressed(evt);
            }
        });
        edit.add(btnEditarUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, -1));

        add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, 190, -1));

        nuevo.setBackground(new java.awt.Color(51, 73, 84));
        nuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nuevoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nuevoMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                nuevoMousePressed(evt);
            }
        });
        nuevo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnNuevo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnNuevo.setText("NUEVO USUARIO");
        btnNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnNuevoMousePressed(evt);
            }
        });
        nuevo.add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, -1));

        add(nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 390, 180, -1));

        buscar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        buscar.setForeground(new java.awt.Color(102, 102, 102));
        buscar.setText("nombre de usuario");
        buscar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buscarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buscarMouseReleased(evt);
            }
        });
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                buscarKeyTyped(evt);
            }
        });
        add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 150, 30));

        listUsu.setBackground(new java.awt.Color(51, 73, 84));
        listUsu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        listUsu.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 11)); // NOI18N
        listUsu.setForeground(new java.awt.Color(255, 255, 255));
        listUsu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Usuario", "Clave", "Cargo", "Paterno", "Materno", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listUsu.setRowHeight(20);
        listUsu.setSelectionBackground(new java.awt.Color(102, 92, 252));
        listUsu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listUsuMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                listUsuMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(listUsu);
        if (listUsu.getColumnModel().getColumnCount() > 0) {
            listUsu.getColumnModel().getColumn(0).setResizable(false);
            listUsu.getColumnModel().getColumn(0).setPreferredWidth(100);
            listUsu.getColumnModel().getColumn(1).setResizable(false);
            listUsu.getColumnModel().getColumn(2).setResizable(false);
            listUsu.getColumnModel().getColumn(3).setResizable(false);
            listUsu.getColumnModel().getColumn(4).setResizable(false);
            listUsu.getColumnModel().getColumn(5).setResizable(false);
            listUsu.getColumnModel().getColumn(6).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 750, 290));

        jLabel6.setText("Nombre usuario :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 30));

        actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ventanas/ACTUALIZAR.jpg"))); // NOI18N
        actualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        actualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actualizarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                actualizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                actualizarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                actualizarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                actualizarMouseReleased(evt);
            }
        });
        add(actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 50, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseEntered
        setColor(delete);
    }//GEN-LAST:event_deleteMouseEntered

    private void deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseExited
        resetColor(delete);
    }//GEN-LAST:event_deleteMouseExited

    private void editMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_editMouseEntered

    private void editMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_editMouseExited

    private void nuevoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevoMouseEntered

    private void nuevoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevoMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevoMouseExited

    private void searchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_searchMouseEntered

    private void searchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_searchMouseExited

    private void nuevoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevoMousePressed
        // Abrir sección
        NuevoUsuario p1 = new NuevoUsuario();
        p1.setSize(750, 430);
        p1.setLocation(0, 0);

        content.removeAll();
        content.add(p1, BorderLayout.CENTER);
        content.revalidate();
        content.repaint();
    }//GEN-LAST:event_nuevoMousePressed

    private void btnNuevoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoMousePressed
        // Abrir sección
        NuevoAdmin p1 = new NuevoAdmin();
        p1.setSize(750, 430);
        p1.setLocation(0, 0);
        content.removeAll();
        content.add(p1, BorderLayout.CENTER);
        content.revalidate();
        content.repaint();
    }//GEN-LAST:event_btnNuevoMousePressed
    // BORRAR
    private void deleteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMousePressed
        try {
            int idcell = listUsu.getSelectedRow();

            if (idcell <= -1) {
                javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el usuario a borrar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {
                Statement stm = reg.createStatement();
                ResultSet counter = stm.executeQuery("SELECT * FROM usuario order by apP desc");

                int count = 0;
                while (counter.next()) {
                    count++;
                }

                String list[][] = new String[count][11];
                int i = 0;
                ResultSet re = stm.executeQuery("SELECT * FROM usuario order by apP desc");
                while (re.next()) {
                    list[i][0] = re.getString("idUsuario");
                    list[i][1] = re.getString("nombre");
                    list[i][2] = re.getString("apP");
                    list[i][3] = re.getString("apM");
                    list[i][4] = re.getString("feN");
                    list[i][5] = re.getString("matricula");
                    list[i][6] = re.getString("sem_ano");
                    list[i][7] = re.getString("nro_est");
                    list[i][8] = re.getString("carrera");
                    list[i][9] = re.getString("ci");
                    list[i][10] = re.getString("tel");
                    i++;
                }
                int id = Integer.parseInt(list[idcell][0]);
                if (id <= 0) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el usuario a borrar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    Statement stm2 = null;
                    try {
                        stm2 = reg.createStatement();
                    } catch (SQLException ex) {
                        Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        stm2.executeUpdate("DELETE FROM `usuario` WHERE `idUsuario` = " + id + " LIMIT 1");
                        javax.swing.JOptionPane.showMessageDialog(this, "¡Usuario borrado! \n", "HECHO", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                    } catch (SQLException ex) {
                        Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                mostrarU();
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_deleteMousePressed
    // EDITAR
    private void editMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMousePressed
        try {
            int idcell = listUsu.getSelectedRow();

            if (idcell <= -1) {
                javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el usuario a editar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {

                Statement stm = reg.createStatement();
                ResultSet counter = stm.executeQuery("SELECT * FROM usuario order by apP asc");

                int c = 0;
                while (counter.next()) {
                    c++;
                }

                String list[][] = new String[c][11];

                ResultSet re = stm.executeQuery("SELECT * FROM usuario order by apP asc");
                while (re.next()) {
                    c--;
                    list[c][0] = re.getString("idUsuario");
                    list[c][1] = re.getString("nombre");
                    list[c][2] = re.getString("apP");
                    list[c][3] = re.getString("apM");
                    list[c][4] = re.getString("feN");
                    list[c][5] = re.getString("matricula");
                    list[c][6] = re.getString("sem_ano");
                    list[c][7] = re.getString("nro_est");
                    list[c][8] = re.getString("carrera");
                    list[c][9] = re.getString("ci");
                    list[c][10] = re.getString("tel");

                }
                int id = Integer.parseInt(list[idcell][0]);
                if (id <= 0) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el usuario para editar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {

                    int usid = id;
                    String usname = list[idcell][1];
                    String usap1 = list[idcell][2];
                    String usap2 = list[idcell][3];
                    String fec = list[idcell][4];
                    String matr = list[idcell][5];
                    String sem = list[idcell][6];
                    String nro = list[idcell][7];
                    String care = list[idcell][8];
                    String usci = list[idcell][9];
                    String ustel = list[idcell][10];

                    NuevoUsuario p1 = new NuevoUsuario(usid, usname, usap1, usap2, fec, matr, sem, nro, care, ustel);
                    p1.setSize(750, 430);
                    p1.setLocation(0, 0);

                    content.removeAll();
                    content.add(p1, BorderLayout.CENTER);
                    content.revalidate();
                    content.repaint();
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editMousePressed
    // BUSCAR
    private void searchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMousePressed
        /*     try {
            String inf = usrnm.getText();
            Statement stm = reg.createStatement();
            ResultSet counter = stm.executeQuery("SELECT * FROM `usuario` WHERE nombre LIKE '" + inf + "%'");

            int count = 0;
            while (counter.next()) {
                count++;
            }

            String list[][] = new String[count][6];
            int i = 0;
            ResultSet re = stm.executeQuery("SELECT * FROM `usuario` WHERE nombre LIKE '" + inf + "%'");
            while (re.next()) {
                list[i][0] = re.getString("nombre");
                list[i][1] = re.getString("apP");
                list[i][2] = re.getString("apM");
                list[i][3] = re.getString("feN");
                list[i][4] = re.getString("ci");
                list[i][5] = re.getString("tel");

                i++;
            }

            listUsu.setModel(new javax.swing.table.DefaultTableModel(
                    list,
                    new String[]{
                        "Nombre", "Apellido P.", "Apellido M.", "Fecha de Nacimiento", "Carnet", "Telefono"
                    }));
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_searchMousePressed
    //CODIGO BUSCAR 
    private void jLabel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MousePressed
        /* String nom = usrnm.getText();
        String matric = matri.getText();

        if ((!nom.equals("Ingrese el Nombre ") && !nom.equals("")) || (!matric.equals("Ingrese la C.I.") && !matric.equals(""))) {
            if ((!nom.equals("Ingrese el Nombre ") && !nom.equals("")) && (!matric.equals("Ingrese la C.I.") && !matric.equals(""))) {
                try {
                    Statement stm = reg.createStatement();
                    ResultSet re = stm.executeQuery("SELECT * FROM `usuario` WHERE `nombre` = '" + nom + "' AND `matricula` = '" + matric + "'");
                    int c = 0;
                    while (re.next()) {
                        c++;
                    }

                    String list[][] = new String[c][8];

                    ResultSet res = stm.executeQuery("SELECT * FROM `usuario` WHERE `nombre` = '" + nom + "' AND `matricula` = '" + matric + "'");
                    int i = 0;
                    while (res.next()) {
                        list[i][0] = res.getString("matricula");
                        list[i][1] = res.getString("nombre");
                        list[i][2] = res.getString("apP");
                        list[i][3] = res.getString("apM");

                        DateTimeFormatter date = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                        LocalDate fechaNacimiento = LocalDate.parse(res.getString("feN"), date);
                        LocalDate fechaActual = LocalDate.now();
                        Period periodo = Period.between(fechaNacimiento, fechaActual);
                        list[i][4] = Integer.toString(periodo.getYears());

                        list[i][5] = res.getString("sem_ano");
                        list[i][6] = res.getString("nro_est");
                        list[i][7] = res.getString("carrera");

                        i++;

                    }

                    listUsu.setModel(new javax.swing.table.DefaultTableModel(
                            list,
                            new String[]{
                                "CEDULA DE IDENTIDAD", "NOMBRE", "APELLIDO P.", "APELLIDO M.", "EDAD", "MODALIDAD", "GRADO", "CARRERA"
                            }));

                    listUsu.getColumnModel().getColumn(0).setPreferredWidth(130);
                    listUsu.getColumnModel().getColumn(1).setPreferredWidth(90);
                    listUsu.getColumnModel().getColumn(2).setPreferredWidth(70);
                    listUsu.getColumnModel().getColumn(3).setPreferredWidth(70);
                    listUsu.getColumnModel().getColumn(4).setPreferredWidth(50);
                    listUsu.getColumnModel().getColumn(5).setPreferredWidth(70);
                    listUsu.getColumnModel().getColumn(6).setPreferredWidth(50);
                    listUsu.getColumnModel().getColumn(7).setPreferredWidth(170);
                } catch (SQLException ex) {
                    Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                if (!matric.equals("Ingrese la C.I.") && !matric.equals("")) {
                    try {
                        Statement stm = reg.createStatement();
                        ResultSet re = stm.executeQuery("SELECT * FROM `usuario` WHERE `matricula` = '" + matric + "'");
                        int c = 0;
                        while (re.next()) {
                            c++;
                        }

                        String list[][] = new String[c][8];

                        ResultSet res = stm.executeQuery("SELECT * FROM `usuario` WHERE `matricula` = '" + matric + "'");
                        int i = 0;
                        while (res.next()) {
                            list[i][0] = res.getString("matricula");
                            list[i][1] = res.getString("nombre");
                            list[i][2] = res.getString("apP");
                            list[i][3] = res.getString("apM");

                            DateTimeFormatter date = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                            LocalDate fechaNacimiento = LocalDate.parse(res.getString("feN"), date);
                            LocalDate fechaActual = LocalDate.now();
                            Period periodo = Period.between(fechaNacimiento, fechaActual);
                            list[i][4] = Integer.toString(periodo.getYears());

                            list[i][5] = res.getString("sem_ano");
                            list[i][6] = res.getString("nro_est");
                            list[i][7] = res.getString("carrera");

                            i++;

                        }

                        listUsu.setModel(new javax.swing.table.DefaultTableModel(
                                list,
                                new String[]{
                                    "CEDULA DE IDENTIDAD", "NOMBRE", "APELLIDO P.", "APELLIDO M.", "EDAD", "MODALIDAD", "GRADO", "CARRERA"
                                }));

                        listUsu.getColumnModel().getColumn(0).setPreferredWidth(130);
                        listUsu.getColumnModel().getColumn(1).setPreferredWidth(90);
                        listUsu.getColumnModel().getColumn(2).setPreferredWidth(70);
                        listUsu.getColumnModel().getColumn(3).setPreferredWidth(70);
                        listUsu.getColumnModel().getColumn(4).setPreferredWidth(50);
                        listUsu.getColumnModel().getColumn(5).setPreferredWidth(70);
                        listUsu.getColumnModel().getColumn(6).setPreferredWidth(50);
                        listUsu.getColumnModel().getColumn(7).setPreferredWidth(170);
                    } catch (SQLException ex) {
                        Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    if (!nom.equals("Ingrese el Nombre ") && !nom.equals("")) {
                        try {
                            Statement stm = reg.createStatement();
                            ResultSet re = stm.executeQuery("SELECT * FROM `usuario` WHERE `nombre` = '" + nom + "'");
                            int c = 0;
                            while (re.next()) {
                                c++;
                            }

                            String list[][] = new String[c][8];

                            ResultSet res = stm.executeQuery("SELECT * FROM `usuario` WHERE `nombre` = '" + nom + "'");
                            int i = 0;
                            while (res.next()) {
                                list[i][0] = res.getString("matricula");
                                list[i][1] = res.getString("nombre");
                                list[i][2] = res.getString("apP");
                                list[i][3] = res.getString("apM");

                                DateTimeFormatter date = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                                LocalDate fechaNacimiento = LocalDate.parse(res.getString("feN"), date);
                                LocalDate fechaActual = LocalDate.now();
                                Period periodo = Period.between(fechaNacimiento, fechaActual);
                                list[i][4] = Integer.toString(periodo.getYears());

                                list[i][5] = res.getString("sem_ano");
                                list[i][6] = res.getString("nro_est");
                                list[i][7] = res.getString("carrera");

                                i++;

                            }

                            listUsu.setModel(new javax.swing.table.DefaultTableModel(
                                    list,
                                    new String[]{
                                        "CEDULA DE IDENTIDAD", "NOMBRE", "APELLIDO P.", "APELLIDO M.", "EDAD", "MODALIDAD", "GRADO", "CARRERA"
                                    }));

                            listUsu.getColumnModel().getColumn(0).setPreferredWidth(130);
                            listUsu.getColumnModel().getColumn(1).setPreferredWidth(90);
                            listUsu.getColumnModel().getColumn(2).setPreferredWidth(70);
                            listUsu.getColumnModel().getColumn(3).setPreferredWidth(70);
                            listUsu.getColumnModel().getColumn(4).setPreferredWidth(50);
                            listUsu.getColumnModel().getColumn(5).setPreferredWidth(70);
                            listUsu.getColumnModel().getColumn(6).setPreferredWidth(50);
                            listUsu.getColumnModel().getColumn(7).setPreferredWidth(170);
                        } catch (SQLException ex) {
                            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "DEBE INGRESAR AL MENOS UN DATO");
        }
         */
    }//GEN-LAST:event_jLabel4MousePressed
//CODIGO QUE EDITA USUARIOS
    private void btnEditarUsuariosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarUsuariosMousePressed
        try {
            int idcell = listUsu.getSelectedRow();
            if (idcell <= -1) {

                javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el estudiante a editar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {

                String id = listUsu.getModel().getValueAt(idcell, 0).toString();
                idcell = Integer.parseInt(id);
                Statement stm = reg.createStatement();
                ResultSet re = stm.executeQuery("SELECT * FROM admi where idadmi ='" + idcell + "' ");
                if (re.next()) {
                    NuevoAdmin p1 = new NuevoAdmin(idcell, re.getString("UAdmi"), re.getString("clave"),
                            re.getString("cargo"), re.getString("nombre"),
                            re.getString("paterno"), re.getString("materno"));
                    //VAMOS A LA PAGINA NUEVO ADMIN LLEVANDO DATOS
                    p1.setSize(750, 430);
                    p1.setLocation(0, 0);
                    content.removeAll();
                    content.add(p1, BorderLayout.CENTER);
                    content.revalidate();
                    content.repaint();

                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el usuario a borrar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
                if (idcell <= 0) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el usuario a borrar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {

                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarUsuariosMousePressed

    private void buscarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarMousePressed
        if (buscar.getText().equals("Ingrese la C.I.")) {
            buscar.setText("");
        }
// TODO add your handling code here:
    }//GEN-LAST:event_buscarMousePressed

    private void buscarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarMouseReleased

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarActionPerformed

    private void actualizarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarMousePressed
        mostrarU();        // TODO add your handling code here:
    }//GEN-LAST:event_actualizarMousePressed

    private void actualizarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_actualizarMouseReleased

    private void actualizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_actualizarMouseEntered

    private void actualizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_actualizarMouseExited

    private void actualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_actualizarMouseClicked

    private void listUsuMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listUsuMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_listUsuMouseReleased

    private void listUsuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listUsuMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_listUsuMousePressed

    private void buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarMouseClicked
        buscar.setText("");
    }//GEN-LAST:event_buscarMouseClicked

    private void buscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyTyped
        // BUSCANDO USUARIOS
        buscarUsuario(buscar.getText());
    }//GEN-LAST:event_buscarKeyTyped

    void setColor(JPanel panel) {
        panel.setBackground(new Color(21, 101, 192));
    }

    void resetColor(JPanel panel) {
        panel.setBackground(new Color(18, 90, 173));
    }

    //METODO PARA BUSCAR USUARIO
    public void buscarUsuario(String cadena) {
        try {
            Statement stm = reg.createStatement();
            ResultSet re = stm.executeQuery("Select * from admi where UAdmi like  '%" + cadena + "%';");
            int c = 0;
            while (re.next()) {
                c++;
            }
            String list[][] = new String[c][8];

            ResultSet res = stm.executeQuery("Select * from admi where UAdmi like  '%" + cadena + "%';");

            while (res.next()) {
                c--;
                list[c][0] = res.getString("idadmi");
                list[c][1] = res.getString("UAdmi");
                list[c][2] = "*************";
                list[c][3] = res.getString("cargo");
                list[c][4] = res.getNString("nombre");
                list[c][5] = res.getString("Paterno");
                list[c][6] = res.getString("Materno");
            }
            //PONIENDO TITULOS A LA TABLA ADEMAS DE LOS DATOS                 
            listUsu.setModel(new javax.swing.table.DefaultTableModel(
                    list,
                    new String[]{
                        "ID", "USUARIO", "PASSWORD", "CARGO", "NOMBRE", "PATERNO", "MATERNO"
                    }));

            //DIMENSIONANDO LA TABLA DE USUARIOS
            listUsu.getColumnModel().getColumn(0).setPreferredWidth(130);
            listUsu.getColumnModel().getColumn(1).setPreferredWidth(90);
            listUsu.getColumnModel().getColumn(2).setPreferredWidth(70);
            listUsu.getColumnModel().getColumn(3).setPreferredWidth(70);
            listUsu.getColumnModel().getColumn(4).setPreferredWidth(50);
            listUsu.getColumnModel().getColumn(5).setPreferredWidth(70);
            listUsu.getColumnModel().getColumn(6).setPreferredWidth(50);
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JLabel actualizar;
    private javax.swing.JPanel body;
    private javax.swing.JLabel btnEditarUsuarios;
    private javax.swing.JLabel btnNuevo;
    private javax.swing.JTextField buscar;
    private javax.swing.JPanel delete;
    private javax.swing.JPanel edit;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable listUsu;
    private javax.swing.JPanel nuevo;
    private javax.swing.JPanel search;
    // End of variables declaration//GEN-END:variables
}
