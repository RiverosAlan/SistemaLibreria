/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import JavaSql.JavaMySql;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;
import static Ventanas.Principal_Sistema.content;
import java.awt.BorderLayout;
import javax.swing.JOptionPane;

/**
 *
 * @author Antonio
 */
public class libro extends javax.swing.JPanel {

    String carLib;
    JavaMySql conn;
    Connection reg;
    String carLibro;

    /**
     * Creates new form Principal
     */
    public libro(String carre) {
        carLibro = carre;
        initComponents();
        conn = new JavaMySql();
        reg = conn.conexion();
        mostrarL(carre);

        switch (carre) {
            case "Contaduria y Auditoria de Sistemas":
                carLib = "AUS";
                break;

            case "Ing de Sistemas y TIC":
                carLib = "SIS";
                break;

            case "Ing Comercial y Empresarial":
                carLib = "COM";
                break;
            case "Medicina Veterinaria":
                carLib = "VET";
                break;
            case "Ing Civil":
                carLib = "CIV";
                break;
            case "Trabajo Social":
                carLib = "TRS";
                break;
            case "Ing de Hardware y Robotica":
                carLib = "HAR";
                break;
            case "Ing de Software y Multimedia":
                carLib = "SOF";
                break;
            case "Ing Zootecnica":
                carLib = "ZOO";
                break;
            case "Ing Agronomica":
                carLib = "ARG";
                break;
            case "Arquitectura y Urbanismo":
                carLib = "ARU";
                break;

        }

    }

    public void mostrarL(String car) {
        try {
            Statement stm = reg.createStatement();
            ResultSet re = stm.executeQuery("SELECT * FROM `libro` WHERE `carrera` = '" + car + "'");
            int c = 0;
            while (re.next()) {
                c++;
            }
            String list[][] = new String[c][8];

            ResultSet res = stm.executeQuery("SELECT * FROM `libro` WHERE `carrera` = '" + car + "'");

            while (res.next()) {
                c--;
                list[c][0] = res.getString("idlibro");
                list[c][1] = res.getString("titulo");
                list[c][2] = res.getString("categoria");
                list[c][3] = res.getString("autor");
                list[c][4] = res.getString("carrera");
                list[c][5] = res.getString("fecha_P");
                list[c][6] = res.getString("disponible");
                list[c][7] = res.getString("Descripcion");

            }

            listaL.setModel(new javax.swing.table.DefaultTableModel(
                    list,
                    new String[]{
                        "ID", "TÍTULO", "CATEGORÍA", "AUTOR", "CARRERA", "F. DE PUBLICACIÓN", "DISPONIBLE", "DESCRIPCIÓN"
                    }));

            listaL.getColumnModel().getColumn(0).setPreferredWidth(50);
            listaL.getColumnModel().getColumn(1).setPreferredWidth(150);
            listaL.getColumnModel().getColumn(2).setPreferredWidth(65);
            listaL.getColumnModel().getColumn(4).setPreferredWidth(100);
            listaL.getColumnModel().getColumn(5).setPreferredWidth(100);
        } catch (SQLException ex) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        body = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        autorL = new javax.swing.JTextField();
        buscar = new javax.swing.JPanel();
        buscarL = new javax.swing.JLabel();
        nuevo = new javax.swing.JPanel();
        registrar = new javax.swing.JLabel();
        edit = new javax.swing.JPanel();
        editar = new javax.swing.JLabel();
        delete = new javax.swing.JPanel();
        borrar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaL = new javax.swing.JTable();
        tituloL = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        actualizarL = new javax.swing.JLabel();
        nuevo1 = new javax.swing.JPanel();
        btnAtras = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(750, 430));
        setPreferredSize(new java.awt.Dimension(750, 430));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        body.setBackground(new java.awt.Color(255, 255, 255));
        body.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(body, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        Title.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Title.setText("LIBROS");
        add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 90, 30));

        jSeparator2.setForeground(new java.awt.Color(0, 153, 255));
        jSeparator2.setPreferredSize(new java.awt.Dimension(250, 10));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 620, 10));

        autorL.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        autorL.setForeground(new java.awt.Color(102, 102, 102));
        autorL.setText("Ingrese el nombre de autor");
        autorL.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        autorL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                autorLMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                autorLMousePressed(evt);
            }
        });
        add(autorL, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, 160, 30));

        buscar.setBackground(new java.awt.Color(51, 73, 84));
        buscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buscarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buscarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buscarMousePressed(evt);
            }
        });
        buscar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buscarL.setBackground(new java.awt.Color(51, 73, 84));
        buscarL.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        buscarL.setForeground(new java.awt.Color(255, 255, 255));
        buscarL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        buscarL.setText("BUSCAR");
        buscarL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buscarLMousePressed(evt);
            }
        });
        buscar.add(buscarL, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 30));

        add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 40, 80, 30));

        nuevo.setBackground(new java.awt.Color(51, 73, 84));
        nuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nuevoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nuevoMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                nuevoMousePressed(evt);
            }
        });
        nuevo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        registrar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        registrar.setForeground(new java.awt.Color(255, 255, 255));
        registrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        registrar.setText("NUEVO LIBRO");
        registrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                registrarMousePressed(evt);
            }
        });
        nuevo.add(registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, -1));

        add(nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 400, 160, -1));

        edit.setBackground(new java.awt.Color(51, 73, 84));
        edit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                editMousePressed(evt);
            }
        });
        edit.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        editar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        editar.setForeground(new java.awt.Color(255, 255, 255));
        editar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editar.setText("EDITAR LIBRO");
        editar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                editarMousePressed(evt);
            }
        });
        edit.add(editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, -1));

        add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 400, 150, -1));

        delete.setBackground(new java.awt.Color(51, 73, 84));
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                deleteMousePressed(evt);
            }
        });
        delete.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        borrar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        borrar.setForeground(new java.awt.Color(255, 255, 255));
        borrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        borrar.setText("BORRAR LIBRO");
        borrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                borrarMousePressed(evt);
            }
        });
        delete.add(borrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, -1));

        add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 400, -1, -1));

        listaL.setBackground(new java.awt.Color(51, 73, 84));
        listaL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        listaL.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 11)); // NOI18N
        listaL.setForeground(new java.awt.Color(255, 255, 255));
        listaL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " Id de Libro", "Título", "Categoría", "Autor", "Carrera", "Fecha de Publicación", "Disponible", "Descripción"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaL.setRowHeight(20);
        listaL.getTableHeader().setReorderingAllowed(false);
        listaL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listaLMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(listaL);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 750, 300));

        tituloL.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tituloL.setForeground(new java.awt.Color(102, 102, 102));
        tituloL.setText("Ingrese el titulo del libro");
        tituloL.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tituloL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tituloLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tituloLMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tituloLMousePressed(evt);
            }
        });
        tituloL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tituloLKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tituloLKeyTyped(evt);
            }
        });
        add(tituloL, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 290, 30));

        jLabel5.setText("TÍtulo del libro:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 45, 80, 20));

        jLabel6.setText("Autor:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 40, 20));

        actualizarL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ventanas/ACTUALIZAR.jpg"))); // NOI18N
        actualizarL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        actualizarL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                actualizarLMousePressed(evt);
            }
        });
        add(actualizarL, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 40, -1, 30));

        nuevo1.setBackground(new java.awt.Color(51, 73, 84));
        nuevo1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nuevo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nuevo1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nuevo1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                nuevo1MousePressed(evt);
            }
        });
        nuevo1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAtras.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAtras.setForeground(new java.awt.Color(255, 255, 255));
        btnAtras.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAtras.setText("<-");
        btnAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAtrasMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAtrasMousePressed(evt);
            }
        });
        nuevo1.add(btnAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, -1));

        add(nuevo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 90, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void autorLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_autorLMousePressed
        if (autorL.getText().equals("Ingrese el ID del Libro a buscar"))
            autorL.setText("");
    }//GEN-LAST:event_autorLMousePressed

    private void buscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarMouseEntered
        setColor(buscar);
    }//GEN-LAST:event_buscarMouseEntered

    private void buscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarMouseExited
        resetColor(buscar);
    }//GEN-LAST:event_buscarMouseExited

    private void registrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registrarMousePressed

        // Abrir sección
        nuevolibro p1 = new nuevolibro(carLib);
        p1.setSize(750, 430);
        p1.setLocation(0, 0);

        content.removeAll();
        content.add(p1, BorderLayout.CENTER);
        content.revalidate();
        content.repaint();
    }//GEN-LAST:event_registrarMousePressed

    private void nuevoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevoMouseEntered

    private void nuevoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevoMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevoMouseExited

    private void nuevoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevoMousePressed
        // Abrir sección
        nuevolibro p1 = new nuevolibro(carLib);
        p1.setSize(750, 430);
        p1.setLocation(0, 0);

        content.removeAll();
        content.add(p1, BorderLayout.CENTER);
        content.revalidate();
        content.repaint();
    }//GEN-LAST:event_nuevoMousePressed

    private void editMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_editMouseEntered

    private void editMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_editMouseExited

    private void deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseEntered
        setColor(delete);
    }//GEN-LAST:event_deleteMouseEntered

    private void deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseExited
        resetColor(delete);
    }//GEN-LAST:event_deleteMouseExited

    private void listaLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaLMousePressed
        if (autorL.getText().equals("") || autorL.getText() == null || autorL.getText().equals(" "))
            autorL.setText("Ingrese el ID del Libro a buscar");
    }//GEN-LAST:event_listaLMousePressed
    // BORRAR
    private void deleteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMousePressed

    }//GEN-LAST:event_deleteMousePressed

    // EDITAR
    private void editMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMousePressed
        try {
            int idcell = listaL.getSelectedRow();
            if (idcell <= -1) {
                javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el libro a editar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {

                Statement stm = reg.createStatement();
                ResultSet counter = stm.executeQuery("SELECT * FROM `libro`");

                int count = 0;
                while (counter.next()) {
                    count++;
                }

                String list[][] = new String[count][8];
                int i = 0;
                ResultSet re = stm.executeQuery("SELECT * FROM `libro`");
                while (re.next()) {
                    list[i][0] = re.getString("idlibro");
                    list[i][1] = re.getString("titulo");
                    list[i][2] = re.getString("categoria");
                    list[i][3] = re.getString("carrera");
                    list[i][4] = re.getString("autor");
                    list[i][5] = re.getString("fecha_P");
                    list[i][6] = re.getString("disponible");
                    list[i][7] = re.getString("Descripcion");
                    i++;
                }
                String id = list[idcell][0];
                if (id == null || id.equals("")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el libro a editar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    String bide = "" + list[idcell][0];
                    String btitu = list[idcell][1];
                    String bcate = list[idcell][2];
                    String bcare = list[idcell][3];
                    String bauto = list[idcell][4];
                    String bfech = list[idcell][5];
                    String bdis = list[idcell][6];
                    String bdesc = list[idcell][7];

                    nuevolibro p1 = new nuevolibro(bide, btitu, bcate, bcare, bauto, bfech, bdis, bdesc);
                    p1.setSize(750, 430);
                    p1.setLocation(5, 5);

                    content.removeAll();
                    content.add(p1, BorderLayout.CENTER);
                    content.revalidate();
                    content.repaint();
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editMousePressed
    // BUSCAR
    private void buscarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarMousePressed
        String care = autorL.getText();
        try {
            Statement stm = reg.createStatement();
            ResultSet re = stm.executeQuery("SELECT * FROM libro WHERE carrera LIKE " + care + "");
            int c = 0;
            while (re.next()) {
                c++;
            }
            String list[][] = new String[c][8];

            ResultSet res = stm.executeQuery("SELECT * FROM libro WHERE carrera LIKE " + care + "");
            int i = 0;
            while (res.next()) {
                list[i][0] = res.getString("idlibro");
                list[i][1] = res.getString("titulo");
                list[i][2] = res.getString("categoria");
                list[i][3] = res.getString("carrera");
                list[i][4] = res.getString("autor");
                list[i][5] = res.getString("fecha_P");
                list[i][6] = res.getString("disponible");
                list[i][7] = res.getString("Descripcion");
                i++;

            }

            listaL.setModel(new javax.swing.table.DefaultTableModel(
                    list,
                    new String[]{
                        "Id de Libro", "Titulo", "Categoria", "Autor", "Carrera", "Fecha de Publicacion", "Disponible", "Descripcion"
                    }));
        } catch (SQLException ex) {
            Logger.getLogger(libro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscarMousePressed

    private void editarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editarMousePressed
        try {
            
            int idcell = listaL.getSelectedRow();
            if (idcell <= -1) {
                javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el libro a editar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {

                Statement stm = reg.createStatement();
                ResultSet counter = stm.executeQuery("SELECT * FROM `libro` WHERE `carrera` = '" + carLibro + "'");

                int count = 0;
                while (counter.next()) {
                    count++;
                }

                String list[][] = new String[count][8];
                int i = count;
                ResultSet re = stm.executeQuery("SELECT * FROM `libro` WHERE `carrera` = '" + carLibro + "'");
                while (re.next()) {
                    i--;
                    list[i][0] = re.getString("idlibro");
                    list[i][1] = re.getString("titulo");
                    list[i][2] = re.getString("categoria");
                    list[i][3] = re.getString("carrera");
                    list[i][4] = re.getString("autor");
                    list[i][5] = re.getString("fecha_P");
                    list[i][6] = re.getString("disponible");
                    list[i][7] = re.getString("Descripcion");

                }
                String id = list[idcell][0];
                if (id == null || id.equals("")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el libro a editar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    String bide = list[idcell][0];
                    String btitu = list[idcell][1];
                    String bcate = list[idcell][2];
                    String bcare = list[idcell][3];
                    String bauto = list[idcell][4];
                    String bfech = list[idcell][5];
                    String bdis = list[idcell][6];
                    String bdesc = list[idcell][7];

                    JOptionPane.showMessageDialog(null, "cod :" + bide);

                    nuevolibro p1 = new nuevolibro(bide, btitu, bcate, bcare, bauto, bfech, bdis, bdesc);
                    p1.setSize(750, 430);
                    p1.setLocation(5, 5);

                    content.removeAll();
                    content.add(p1, BorderLayout.CENTER);
                    content.revalidate();
                    content.repaint();
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_editarMousePressed

    private void buscarLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarLMousePressed

        String care = tituloL.getText();
        String aut = autorL.getText();

        if ((!care.equals("Ingrese el titulo del libro") && !care.equals("")) || (!aut.equals("Ingrese el nombre de autor") && !aut.equals(""))) {
            if ((!care.equals("Ingrese el titulo del libro") && !care.equals("")) && (!aut.equals("Ingrese el nombre de autor") && !aut.equals(""))) {
                try {
                    Statement stm = reg.createStatement();
                    ResultSet re = stm.executeQuery("SELECT * FROM `libro` WHERE `titulo` = '" + care + "' AND `autor` = '" + aut + "'");
                    int c = 0;
                    while (re.next()) {
                        c++;
                    }
                    String list[][] = new String[c][8];

                    ResultSet res = stm.executeQuery("SELECT * FROM `libro` WHERE `titulo` = '" + care + "' AND `autor` = '" + aut + "'");
                    int i = 0;
                    while (res.next()) {
                        list[i][0] = res.getString("idlibro");
                        list[i][1] = res.getString("titulo");
                        list[i][2] = res.getString("categoria");
                        list[i][3] = res.getString("autor");
                        list[i][4] = res.getString("carrera");
                        list[i][5] = res.getString("fecha_P");
                        list[i][6] = res.getString("disponible");
                        list[i][7] = res.getString("Descripcion");
                        i++;

                    }

                    listaL.setModel(new javax.swing.table.DefaultTableModel(
                            list,
                            new String[]{
                                "ID", "TÍTULO", "CATEGORÍA", "AUTOR", "CARRERA", "F. DE PUBLICACIÓN", "DISPONIBLE", "DESCRIPCIÓN"
                            }));
                } catch (SQLException ex) {
                    Logger.getLogger(libro.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                if (!care.equals("Ingrese el titulo del libro") && !care.equals("")) {
                    try {
                        Statement stm = reg.createStatement();
                        ResultSet re = stm.executeQuery("SELECT * FROM `libro` WHERE `titulo` = '" + care + "'");
                        int c = 0;
                        while (re.next()) {
                            c++;
                        }
                        String list[][] = new String[c][8];

                        ResultSet res = stm.executeQuery("SELECT * FROM `libro` WHERE `titulo` = '" + care + "'");
                        int i = 0;
                        while (res.next()) {
                            list[i][0] = res.getString("idlibro");
                            list[i][1] = res.getString("titulo");
                            list[i][2] = res.getString("categoria");
                            list[i][3] = res.getString("autor");
                            list[i][4] = res.getString("carrera");
                            list[i][5] = res.getString("fecha_P");
                            list[i][6] = res.getString("disponible");
                            list[i][7] = res.getString("Descripcion");
                            i++;

                        }

                        listaL.setModel(new javax.swing.table.DefaultTableModel(
                                list,
                                new String[]{
                                   "ID", "TÍTULO", "CATEGORÍA", "AUTOR", "CARRERA", "F. DE PUBLICACIÓN", "DISPONIBLE", "DESCRIPCIÓN"
                                }));
                    } catch (SQLException ex) {
                        Logger.getLogger(libro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    if (!aut.equals("Ingrese el nombre de autor") && !aut.equals("")) {

                        try {
                            Statement stm = reg.createStatement();
                            ResultSet re = stm.executeQuery("SELECT * FROM `libro` WHERE `autor` = '" + aut + "'");
                            int c = 0;
                            while (re.next()) {
                                c++;
                            }
                            String list[][] = new String[c][8];

                            ResultSet res = stm.executeQuery("SELECT * FROM `libro` WHERE `autor` = '" + aut + "'");
                            int i = 0;
                            while (res.next()) {
                                list[i][0] = res.getString("idlibro");
                                list[i][1] = res.getString("titulo");
                                list[i][2] = res.getString("categoria");
                                list[i][3] = res.getString("autor");
                                list[i][4] = res.getString("carrera");
                                list[i][5] = res.getString("fecha_P");
                                list[i][6] = res.getString("disponible");
                                list[i][7] = res.getString("Descripcion");
                                i++;

                            }

                            listaL.setModel(new javax.swing.table.DefaultTableModel(
                                    list,
                                    new String[]{
                                        "ID", "TÍTULO", "CATEGORÍA", "AUTOR", "CARRERA", "F. DE PUBLICACIÓN", "DISPONIBLE", "DESCRIPCIÓN"
                                    }));
                        } catch (SQLException ex) {
                            Logger.getLogger(libro.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "DEBE INGRESAR AL MENOS UN DATO");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_buscarLMousePressed

    private void tituloLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tituloLMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tituloLMousePressed

    private void borrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_borrarMousePressed
        try {
            int idcell = listaL.getSelectedRow();
            if (idcell <= -1) {
                javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el libro a borrar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {

                Statement stm = reg.createStatement();
                ResultSet counter = stm.executeQuery("SELECT * FROM `libro` WHERE `carrera` = '" + carLibro + "'");

                int count = 0;
                while (counter.next()) {
                    count++;
                }

                String list[][] = new String[count][12];
                int i = count;
                ResultSet re = stm.executeQuery("SELECT * FROM `libro` WHERE `carrera` = '" + carLibro + "'");
                while (re.next()) {
                    i--;
                    list[i][0] = re.getString("idlibro");
                    list[i][1] = re.getString("titulo");
                    list[i][2] = re.getString("categoria");
                    list[i][3] = re.getString("carrera");
                    list[i][4] = re.getString("autor");
                    list[i][5] = re.getString("fecha_P");
                    list[i][6] = re.getString("disponible");
                    list[i][7] = re.getString("Descripcion");

                }

                String id = list[idcell][0];

                if (id == null || id.equals("")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el libro a borrar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {

                    try {
                        Statement stm2 = reg.createStatement();
                        stm2.executeUpdate("DELETE FROM `libro` WHERE `idlibro` = '" + id + "'");
                        javax.swing.JOptionPane.showMessageDialog(this, "¡Libro borrado! \n", "HECHO", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                    } catch (SQLException ex) {
                        Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                mostrarL(carLibro);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_borrarMousePressed

    private void actualizarLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarLMousePressed
        mostrarL(carLibro);        // TODO add your handling code here:
    }//GEN-LAST:event_actualizarLMousePressed

    private void tituloLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tituloLMouseClicked
        //EVENTO DE BORRADO DE TITULO DEL LIBRO
        tituloL.setText("");
    }//GEN-LAST:event_tituloLMouseClicked

    private void tituloLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tituloLMouseEntered
        //EVENTO DE BORRADO DE TITULO DEL LIBRO
        //tituloL.setText("");
    }//GEN-LAST:event_tituloLMouseEntered

    private void tituloLKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tituloLKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tituloLKeyReleased

    private void tituloLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tituloLKeyTyped
      //EVENTO DE ESCRIBIR EN EL TITULO DE BUSQUEDA DE LIBRO
      buscarEvento();
    }//GEN-LAST:event_tituloLKeyTyped

    private void btnAtrasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtrasMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtrasMousePressed

    private void nuevo1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevo1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevo1MouseEntered

    private void nuevo1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevo1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevo1MouseExited

    private void nuevo1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevo1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevo1MousePressed

    private void btnAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtrasMouseClicked
        //CODIGO PARA VOLVER A LA SECCION DE LIBROS
        // Abrir sección
        carrera p1 = new carrera();
        p1.setSize(750, 430);
        p1.setLocation(0,0);
        
        content.removeAll();
        content.add(p1, BorderLayout.CENTER);
        content.revalidate();
        content.repaint();
        
    }//GEN-LAST:event_btnAtrasMouseClicked

    private void autorLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_autorLMouseClicked
        //LIMPIAR CAMPO DE AUTOR
        autorL.setText("");
    }//GEN-LAST:event_autorLMouseClicked

    void setColor(JPanel panel) {
        panel.setBackground(new Color(21, 101, 192));
    }

    void resetColor(JPanel panel) {
        panel.setBackground(new Color(18, 90, 173));
    }

    //METODO PARA BUSCAR LIBRO MIENTRAS SE ESCRIBNE
    public void buscarEvento() {

        String care = tituloL.getText();
        String aut = autorL.getText();

        if ((!care.equals("Ingrese el titulo del libro") && !care.equals("")) || (!aut.equals("Ingrese el nombre de autor") && !aut.equals(""))) {
            if ((!care.equals("Ingrese el titulo del libro") && !care.equals("")) && (!aut.equals("Ingrese el nombre de autor") && !aut.equals(""))) {
                try {
                    Statement stm = reg.createStatement();
                    ResultSet re = stm.executeQuery("SELECT * FROM `libro` WHERE `titulo` = '" + care + "' AND `autor` = '" + aut + "'");
                    int c = 0;
                    while (re.next()) {
                        c++;
                    }
                    String list[][] = new String[c][8];

                    ResultSet res = stm.executeQuery("SELECT * FROM `libro` WHERE `titulo` = '" + care + "' AND `autor` = '" + aut + "'");
                    int i = 0;
                    while (res.next()) {
                        list[i][0] = res.getString("idlibro");
                        list[i][1] = res.getString("titulo");
                        list[i][2] = res.getString("categoria");
                        list[i][3] = res.getString("autor");
                        list[i][4] = res.getString("carrera");
                        list[i][5] = res.getString("fecha_P");
                        list[i][6] = res.getString("disponible");
                        list[i][7] = res.getString("Descripcion");
                        i++;

                    }

                    listaL.setModel(new javax.swing.table.DefaultTableModel(
                            list,
                            new String[]{
                                "ID", "TÍTULO", "CATEGORÍA", "AUTOR", "CARRERA", "F. DE PUBLICACIÓN", "DISPONIBLE", "DESCRIPCIÓN"
                            }));
                } catch (SQLException ex) {
                    Logger.getLogger(libro.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                if (!care.equals("Ingrese el titulo del libro") && !care.equals("")) {
                    try {
                        Statement stm = reg.createStatement();
                        ResultSet re = stm.executeQuery("Select * from libro where titulo  like '%"+care+"%' and carrera = '"+carLibro+"';");
                        
                        int c = 0;
                        while (re.next()) {
                            c++;
                        }
                        String list[][] = new String[c][8];

                        ResultSet res = stm.executeQuery("Select * from libro where titulo  like '%"+care+"%' and carrera = '"+carLibro+"';");
                        int i = 0;
                        while (res.next()) {
                            list[i][0] = res.getString("idlibro");
                            list[i][1] = res.getString("titulo");
                            list[i][2] = res.getString("categoria");
                            list[i][3] = res.getString("autor");
                            list[i][4] = res.getString("carrera");
                            list[i][5] = res.getString("fecha_P");
                            list[i][6] = res.getString("disponible");
                            list[i][7] = res.getString("Descripcion");
                            i++;

                        }

                        listaL.setModel(new javax.swing.table.DefaultTableModel(
                                list,
                                new String[]{
                                   "ID", "TÍTULO", "CATEGORÍA", "AUTOR", "CARRERA", "F. DE PUBLICACIÓN", "DISPONIBLE", "DESCRIPCIÓN"
                                }));
                    } catch (SQLException ex) {
                        Logger.getLogger(libro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    if (!aut.equals("Ingrese el nombre de autor") && !aut.equals("")) {

                        try {
                            Statement stm = reg.createStatement();
                            ResultSet re = stm.executeQuery("SELECT * FROM `libro` WHERE `autor` = '" + aut + "'");
                            int c = 0;
                            while (re.next()) {
                                c++;
                            }
                            String list[][] = new String[c][8];

                            ResultSet res = stm.executeQuery("SELECT * FROM `libro` WHERE `autor` = '" + aut + "'");
                            int i = 0;
                            while (res.next()) {
                                list[i][0] = res.getString("idlibro");
                                list[i][1] = res.getString("titulo");
                                list[i][2] = res.getString("categoria");
                                list[i][3] = res.getString("autor");
                                list[i][4] = res.getString("carrera");
                                list[i][5] = res.getString("fecha_P");
                                list[i][6] = res.getString("disponible");
                                list[i][7] = res.getString("Descripcion");
                                i++;

                            }

                            listaL.setModel(new javax.swing.table.DefaultTableModel(
                                    list,
                                    new String[]{
                                        "ID", "TÍTULO", "CATEGORÍA", "AUTOR", "CARRERA", "F. DE PUBLICACIÓN", "DISPONIBLE", "DESCRIPCIÓN"
                                    }));
                        } catch (SQLException ex) {
                            Logger.getLogger(libro.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }

        } else {
            //JOptionPane.showMessageDialog(null, "DEBE INGRESAR AL MENOS UN DATO");
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JLabel actualizarL;
    private javax.swing.JTextField autorL;
    private javax.swing.JPanel body;
    private javax.swing.JLabel borrar;
    private javax.swing.JLabel btnAtras;
    private javax.swing.JPanel buscar;
    private javax.swing.JLabel buscarL;
    private javax.swing.JPanel delete;
    private javax.swing.JPanel edit;
    private javax.swing.JLabel editar;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable listaL;
    private javax.swing.JPanel nuevo;
    private javax.swing.JPanel nuevo1;
    private javax.swing.JLabel registrar;
    private javax.swing.JTextField tituloL;
    // End of variables declaration//GEN-END:variables
}
